// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(AppBar)
    className="appBar"
    color="default"
    elevation={10}
    position="static"
  >
    <WithStyles(IconButton)
      aria-label="Open drawer"
      className="burger"
      color="inherit"
      onClick={[Function]}
    >
      <pure(MenuIcon) />
    </WithStyles(IconButton)>
    <WithStyles(Toolbar)
      className="toolbar"
    >
      <div
        className="header"
      >
        <img
          alt="logo"
          className="logo"
          src=""
        />
        <WithStyles(Typography)
          color="inherit"
          variant="title"
        >
          Card Match Game
        </WithStyles(Typography)>
      </div>
    </WithStyles(Toolbar)>
  </WithStyles(AppBar)>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <WithStyles(IconButton)
          aria-label="Open drawer"
          className="burger"
          color="inherit"
          onClick={[Function]}
        >
          <pure(MenuIcon) />
        </WithStyles(IconButton)>,
        <WithStyles(Toolbar)
          className="toolbar"
        >
          <div
            className="header"
          >
            <img
              alt="logo"
              className="logo"
              src=""
            />
            <WithStyles(Typography)
              color="inherit"
              variant="title"
            >
              Card Match Game
            </WithStyles(Typography)>
          </div>
        </WithStyles(Toolbar)>,
        null,
      ],
      "className": "appBar",
      "classes": Object {
        "colorDefault": "MuiAppBar-colorDefault-7",
        "colorPrimary": "MuiAppBar-colorPrimary-8",
        "colorSecondary": "MuiAppBar-colorSecondary-9",
        "positionAbsolute": "MuiAppBar-positionAbsolute-3",
        "positionFixed": "MuiAppBar-positionFixed-2",
        "positionRelative": "MuiAppBar-positionRelative-6",
        "positionStatic": "MuiAppBar-positionStatic-5",
        "positionSticky": "MuiAppBar-positionSticky-4",
        "root": "MuiAppBar-root-1",
      },
      "color": "default",
      "elevation": 10,
      "position": "static",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "Open drawer",
          "children": <pure(MenuIcon) />,
          "className": "burger",
          "color": "inherit",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="header"
          >
            <img
              alt="logo"
              className="logo"
              src=""
            />
            <WithStyles(Typography)
              color="inherit"
              variant="title"
            >
              Card Match Game
            </WithStyles(Typography)>
          </div>,
          "className": "toolbar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="logo"
                src=""
              />,
              <WithStyles(Typography)
                color="inherit"
                variant="title"
              >
                Card Match Game
              </WithStyles(Typography)>,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "logo",
                "src": "",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Card Match Game",
                "color": "inherit",
                "variant": "title",
              },
              "ref": null,
              "rendered": "Card Match Game",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      null,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <WithStyles(IconButton)
            aria-label="Open drawer"
            className="burger"
            color="inherit"
            onClick={[Function]}
          >
            <pure(MenuIcon) />
          </WithStyles(IconButton)>,
          <WithStyles(Toolbar)
            className="toolbar"
          >
            <div
              className="header"
            >
              <img
                alt="logo"
                className="logo"
                src=""
              />
              <WithStyles(Typography)
                color="inherit"
                variant="title"
              >
                Card Match Game
              </WithStyles(Typography)>
            </div>
          </WithStyles(Toolbar)>,
          null,
        ],
        "className": "appBar",
        "classes": Object {
          "colorDefault": "MuiAppBar-colorDefault-7",
          "colorPrimary": "MuiAppBar-colorPrimary-8",
          "colorSecondary": "MuiAppBar-colorSecondary-9",
          "positionAbsolute": "MuiAppBar-positionAbsolute-3",
          "positionFixed": "MuiAppBar-positionFixed-2",
          "positionRelative": "MuiAppBar-positionRelative-6",
          "positionStatic": "MuiAppBar-positionStatic-5",
          "positionSticky": "MuiAppBar-positionSticky-4",
          "root": "MuiAppBar-root-1",
        },
        "color": "default",
        "elevation": 10,
        "position": "static",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "Open drawer",
            "children": <pure(MenuIcon) />,
            "className": "burger",
            "color": "inherit",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className="header"
            >
              <img
                alt="logo"
                className="logo"
                src=""
              />
              <WithStyles(Typography)
                color="inherit"
                variant="title"
              >
                Card Match Game
              </WithStyles(Typography)>
            </div>,
            "className": "toolbar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="logo"
                  src=""
                />,
                <WithStyles(Typography)
                  color="inherit"
                  variant="title"
                >
                  Card Match Game
                </WithStyles(Typography)>,
              ],
              "className": "header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "logo",
                  "src": "",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Card Match Game",
                  "color": "inherit",
                  "variant": "title",
                },
                "ref": null,
                "rendered": "Card Match Game",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        null,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
