// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shows back if not isOpen 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <div
    className="responsiveCell"
  >
    <Flipper
      cardStyles={
        Object {
          "back": Object {},
          "front": Object {},
        }
      }
      isClosed={false}
    >
      <WithStyles(Card)
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "height": 175,
            "justifyContent": "center",
            "width": 100,
          }
        }
      >
        <WithStyles(CardContent)>
          <div>
            <WithStyles(Typography)
              color="textSecondary"
            >
               
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="h2"
              variant="headline"
            >
              a
            </WithStyles(Typography)>
          </div>
        </WithStyles(CardContent)>
      </WithStyles(Card)>
      <WithStyles(Card)
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "height": 175,
            "justifyContent": "center",
            "width": 100,
          }
        }
      >
        <WithStyles(CardContent)>
          <WithStyles(CardMedia)
            image="file-stub"
            style={
              Object {
                "height": 50,
                "width": 50,
              }
            }
          />
        </WithStyles(CardContent)>
      </WithStyles(Card)>
    </Flipper>
  </div>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Flipper
        cardStyles={
          Object {
            "back": Object {},
            "front": Object {},
          }
        }
        isClosed={false}
      >
        <WithStyles(Card)
          onClick={[Function]}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            }
          }
        >
          <WithStyles(CardContent)>
            <div>
              <WithStyles(Typography)
                color="textSecondary"
              >
                 
              </WithStyles(Typography)>
              <WithStyles(Typography)
                component="h2"
                variant="headline"
              >
                a
              </WithStyles(Typography)>
            </div>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
        <WithStyles(Card)
          onClick={[Function]}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            }
          }
        >
          <WithStyles(CardContent)>
            <WithStyles(CardMedia)
              image="file-stub"
              style={
                Object {
                  "height": 50,
                  "width": 50,
                }
              }
            />
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </Flipper>,
      "className": "responsiveCell",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "cardStyles": Object {
          "back": Object {},
          "front": Object {},
        },
        "children": Array [
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
        ],
        "isClosed": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "front",
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>,
            "onClick": [Function],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>,
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": " ",
                    "color": "textSecondary",
                  },
                  "ref": null,
                  "rendered": " ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "a",
                    "component": "h2",
                    "variant": "headline",
                  },
                  "ref": null,
                  "rendered": "a",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "back",
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>,
            "onClick": [Function],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "image": "file-stub",
                "style": Object {
                  "height": 50,
                  "width": 50,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Flipper
          cardStyles={
            Object {
              "back": Object {},
              "front": Object {},
            }
          }
          isClosed={false}
        >
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </Flipper>,
        "className": "responsiveCell",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cardStyles": Object {
            "back": Object {},
            "front": Object {},
          },
          "children": Array [
            <WithStyles(Card)
              onClick={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "height": 175,
                  "justifyContent": "center",
                  "width": 100,
                }
              }
            >
              <WithStyles(CardContent)>
                <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            <WithStyles(Card)
              onClick={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "height": 175,
                  "justifyContent": "center",
                  "width": 100,
                }
              }
            >
              <WithStyles(CardContent)>
                <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
          ],
          "isClosed": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "front",
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardContent)>
                <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>
              </WithStyles(CardContent)>,
              "onClick": [Function],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <WithStyles(Typography)
                      color="textSecondary"
                    >
                       
                    </WithStyles(Typography)>,
                    <WithStyles(Typography)
                      component="h2"
                      variant="headline"
                    >
                      a
                    </WithStyles(Typography)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": " ",
                      "color": "textSecondary",
                    },
                    "ref": null,
                    "rendered": " ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "a",
                      "component": "h2",
                      "variant": "headline",
                    },
                    "ref": null,
                    "rendered": "a",
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "back",
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardContent)>
                <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </WithStyles(CardContent)>,
              "onClick": [Function],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "image": "file-stub",
                  "style": Object {
                    "height": 50,
                    "width": 50,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Shows card value if isOpen 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <div
    className="responsiveCell"
  >
    <Flipper
      cardStyles={
        Object {
          "back": Object {},
          "front": Object {},
        }
      }
      isClosed={true}
    >
      <WithStyles(Card)
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "height": 175,
            "justifyContent": "center",
            "width": 100,
          }
        }
      >
        <WithStyles(CardContent)>
          <div>
            <WithStyles(Typography)
              color="textSecondary"
            >
               
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="h2"
              variant="headline"
            >
              a
            </WithStyles(Typography)>
          </div>
        </WithStyles(CardContent)>
      </WithStyles(Card)>
      <WithStyles(Card)
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "height": 175,
            "justifyContent": "center",
            "width": 100,
          }
        }
      >
        <WithStyles(CardContent)>
          <WithStyles(CardMedia)
            image="file-stub"
            style={
              Object {
                "height": 50,
                "width": 50,
              }
            }
          />
        </WithStyles(CardContent)>
      </WithStyles(Card)>
    </Flipper>
  </div>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Flipper
        cardStyles={
          Object {
            "back": Object {},
            "front": Object {},
          }
        }
        isClosed={true}
      >
        <WithStyles(Card)
          onClick={[Function]}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            }
          }
        >
          <WithStyles(CardContent)>
            <div>
              <WithStyles(Typography)
                color="textSecondary"
              >
                 
              </WithStyles(Typography)>
              <WithStyles(Typography)
                component="h2"
                variant="headline"
              >
                a
              </WithStyles(Typography)>
            </div>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
        <WithStyles(Card)
          onClick={[Function]}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            }
          }
        >
          <WithStyles(CardContent)>
            <WithStyles(CardMedia)
              image="file-stub"
              style={
                Object {
                  "height": 50,
                  "width": 50,
                }
              }
            />
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </Flipper>,
      "className": "responsiveCell",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "cardStyles": Object {
          "back": Object {},
          "front": Object {},
        },
        "children": Array [
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
        ],
        "isClosed": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "front",
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>,
            "onClick": [Function],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>,
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": " ",
                    "color": "textSecondary",
                  },
                  "ref": null,
                  "rendered": " ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "a",
                    "component": "h2",
                    "variant": "headline",
                  },
                  "ref": null,
                  "rendered": "a",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "back",
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>,
            "onClick": [Function],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
              "height": 175,
              "justifyContent": "center",
              "width": 100,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "image": "file-stub",
                "style": Object {
                  "height": 50,
                  "width": 50,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Flipper
          cardStyles={
            Object {
              "back": Object {},
              "front": Object {},
            }
          }
          isClosed={true}
        >
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <div>
                <WithStyles(Typography)
                  color="textSecondary"
                >
                   
                </WithStyles(Typography)>
                <WithStyles(Typography)
                  component="h2"
                  variant="headline"
                >
                  a
                </WithStyles(Typography)>
              </div>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
          <WithStyles(Card)
            onClick={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              }
            }
          >
            <WithStyles(CardContent)>
              <WithStyles(CardMedia)
                image="file-stub"
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </Flipper>,
        "className": "responsiveCell",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cardStyles": Object {
            "back": Object {},
            "front": Object {},
          },
          "children": Array [
            <WithStyles(Card)
              onClick={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "height": 175,
                  "justifyContent": "center",
                  "width": 100,
                }
              }
            >
              <WithStyles(CardContent)>
                <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            <WithStyles(Card)
              onClick={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "height": 175,
                  "justifyContent": "center",
                  "width": 100,
                }
              }
            >
              <WithStyles(CardContent)>
                <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
          ],
          "isClosed": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "front",
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardContent)>
                <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>
              </WithStyles(CardContent)>,
              "onClick": [Function],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div>
                  <WithStyles(Typography)
                    color="textSecondary"
                  >
                     
                  </WithStyles(Typography)>
                  <WithStyles(Typography)
                    component="h2"
                    variant="headline"
                  >
                    a
                  </WithStyles(Typography)>
                </div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <WithStyles(Typography)
                      color="textSecondary"
                    >
                       
                    </WithStyles(Typography)>,
                    <WithStyles(Typography)
                      component="h2"
                      variant="headline"
                    >
                      a
                    </WithStyles(Typography)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": " ",
                      "color": "textSecondary",
                    },
                    "ref": null,
                    "rendered": " ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "a",
                      "component": "h2",
                      "variant": "headline",
                    },
                    "ref": null,
                    "rendered": "a",
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "back",
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(CardContent)>
                <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </WithStyles(CardContent)>,
              "onClick": [Function],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "height": 175,
                "justifyContent": "center",
                "width": 100,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(CardMedia)
                  image="file-stub"
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "image": "file-stub",
                  "style": Object {
                    "height": 50,
                    "width": 50,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
