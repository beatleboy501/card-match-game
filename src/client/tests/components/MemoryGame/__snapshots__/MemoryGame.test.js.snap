// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MemoryGame
    cardMatchCount={2}
    cards={
      Array [
        Object {
          "id": 1,
          "value": "a",
        },
        Object {
          "id": 2,
          "value": "b",
        },
        Object {
          "id": 3,
          "value": "c",
        },
        Object {
          "id": 4,
          "value": "d",
        },
        Object {
          "id": 5,
          "value": "a",
        },
        Object {
          "id": 6,
          "value": "b",
        },
        Object {
          "id": 7,
          "value": "c",
        },
        Object {
          "id": 8,
          "value": "d",
        },
      ]
    }
    dispatchAddMatch={[MockFunction]}
    dispatchAddOpenId={[MockFunction]}
    dispatchSetOpenIds={[MockFunction]}
    dispatchStartGame={[MockFunction]}
    isFirstCard={true}
    matchedCards={Array []}
    onGameComplete={[MockFunction]}
    onGameStart={[MockFunction]}
    openIds={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          className="matches"
          color="inherit"
          variant="title"
        >
          Matches
           
           
          :
           
          0
        </WithStyles(Typography)>,
        <div
          className="cardsContainer"
        >
          <div
            className="cards"
          >
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 1,
                  "value": "a",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 2,
                  "value": "b",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 3,
                  "value": "c",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 4,
                  "value": "d",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 5,
                  "value": "a",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 6,
                  "value": "b",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 7,
                  "value": "c",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 8,
                  "value": "d",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            "Matches",
            " ",
            " ",
            ":",
            " ",
            0,
          ],
          "className": "matches",
          "color": "inherit",
          "variant": "title",
        },
        "ref": null,
        "rendered": Array [
          "Matches",
          " ",
          " ",
          ":",
          " ",
          0,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="cards"
          >
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 1,
                  "value": "a",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 2,
                  "value": "b",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 3,
                  "value": "c",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 4,
                  "value": "d",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 5,
                  "value": "a",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 6,
                  "value": "b",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 7,
                  "value": "c",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
            <WithStyles(GameCard)
              cardInfo={
                Object {
                  "id": 8,
                  "value": "d",
                }
              }
              isOpen={false}
              onClick={[Function]}
            />
          </div>,
          "className": "cardsContainer",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 1,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 2,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 3,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 4,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 5,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 6,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 7,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 8,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />,
            ],
            "className": "cards",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 1,
                  "value": "a",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 2,
                  "value": "b",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "3",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 3,
                  "value": "c",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "4",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 4,
                  "value": "d",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "5",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 5,
                  "value": "a",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "6",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 6,
                  "value": "b",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "7",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 7,
                  "value": "c",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "8",
              "nodeType": "class",
              "props": Object {
                "cardInfo": Object {
                  "id": 8,
                  "value": "d",
                },
                "isOpen": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            className="matches"
            color="inherit"
            variant="title"
          >
            Matches
             
             
            :
             
            0
          </WithStyles(Typography)>,
          <div
            className="cardsContainer"
          >
            <div
              className="cards"
            >
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 1,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 2,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 3,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 4,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 5,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 6,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 7,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 8,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Matches",
              " ",
              " ",
              ":",
              " ",
              0,
            ],
            "className": "matches",
            "color": "inherit",
            "variant": "title",
          },
          "ref": null,
          "rendered": Array [
            "Matches",
            " ",
            " ",
            ":",
            " ",
            0,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="cards"
            >
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 1,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 2,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 3,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 4,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 5,
                    "value": "a",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 6,
                    "value": "b",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 7,
                    "value": "c",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
              <WithStyles(GameCard)
                cardInfo={
                  Object {
                    "id": 8,
                    "value": "d",
                  }
                }
                isOpen={false}
                onClick={[Function]}
              />
            </div>,
            "className": "cardsContainer",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 1,
                      "value": "a",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 2,
                      "value": "b",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 3,
                      "value": "c",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 4,
                      "value": "d",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 5,
                      "value": "a",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 6,
                      "value": "b",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 7,
                      "value": "c",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
                <WithStyles(GameCard)
                  cardInfo={
                    Object {
                      "id": 8,
                      "value": "d",
                    }
                  }
                  isOpen={false}
                  onClick={[Function]}
                />,
              ],
              "className": "cards",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 1,
                    "value": "a",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 2,
                    "value": "b",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 3,
                    "value": "c",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 4,
                    "value": "d",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 5,
                    "value": "a",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "6",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 6,
                    "value": "b",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "7",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 7,
                    "value": "c",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "8",
                "nodeType": "class",
                "props": Object {
                  "cardInfo": Object {
                    "id": 8,
                    "value": "d",
                  },
                  "isOpen": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
